@model  CTS_Manual_Input.Models.SkipModels.SkipsAndTransfersModel
@using PagedList.Mvc;
@using CTS_Manual_Input.Helpers;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Данные скиповых подъемов</h1>
@if ((Model.Skips.Count() > 0) && (Model != null))
{
    <h2>Добавить новые данные</h2>

    <table class="table table-striped table-hover ">
        <thead>
            <tr>
                <th>Скип</th>
                <th>Шахта</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mod in Model.Skips)
            {
                <tr>
                    <td>@Html.DisplayFor(x => mod.Name)</td>
                    <td>@Html.DisplayFor(x => mod.Location.LocationName)</td>
                    <td><input type="button" class="btn btn-content" value="Добавить данные" onclick="location.href='@Url.Action("Add", "Skip", new {skipID = mod.ID, name = mod.Name})'" /></td>
                    <td>
                        @using (Html.BeginForm("FastAdd", "Skip", FormMethod.Post, new { Id = "fastAdd_" + @mod.ID, enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <input class="btn btn-content" value="Добавить Быстро" id="@mod.ID" onclick="fastAddValidation(this.id, document.getElementById('Counter_'+this.id).value)" />
                            <input hidden="" name="EquipID" type="text" value=@mod.ID>
                            <label for="@mod.ID">Количество:</label>

                            <input id="Counter_@mod.ID" type="text" width="10" value="1" name="Counter" min="1" oninput = "this.value = this.value.replace(/[^0-9]/, '')">
                            <span class="validity"></span>
							<span class="field-validation-error" id="validError_@mod.ID" style="visibility: hidden" data-valmsg-for="LiftingID" data-valmsg-replace="true">Должно быть 1-499</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h2>Данные скиповых подъемов</h2>

@if ((Model.SkipTransfers.Count > 0) && (Model != null))
{
    <table class="table table-striped table-hover ">
        <thead>
            <tr>
                <th>ID</th>
                <th>Количество подъемов</th>
                <th>Скип</th>
                <th>Расположение</th>
                <th>Дата</th>
                <th>Оператор</th>
                <th>Статус</th>
                <th></th>
            </tr>
        </thead>
        @foreach (var mod in Model.SkipTransfers)
		{
			<tr>
				<td>@Html.DisplayFor(x => mod.ID)</td>
				<td>@Html.DisplayFor(x => mod.LiftingID)</td>
				<td>@Html.DisplayFor(x => mod.Equip.Name)</td>
				<td>@Html.DisplayFor(x => mod.Equip.Location.LocationName)</td>
				<td>@Html.DisplayFor(x => mod.TransferTimeStamp)</td>
				<td>@Html.DisplayFor(x => mod.OperatorName).ToString().Substring(mod.OperatorName.LastIndexOf('\\') + 1)</td>
				<td>
					@if (mod.InheritedFrom != null)
					{
						@Html.DisplayFor(x => mod.InheritedFrom);

						if ((mod.Status != 2) && (mod.Status != 6) && (mod.Status != 10))
						{
							<p>@ProjectConstants.ApproveStatus[10]</p>
						}

					}
					@ProjectConstants.ApproveStatus[mod.Status]
				</td>

				@if (mod.IsValid && ((mod.Status >= 7) && (mod.Status <= 10)))
				{
					<td align="center">
						<div style="margin-bottom:5px">
							@if (Model.CanEdit)
							{
								<input type="button" name="EditButton" class="btn btn-primary btn-xs" value="Изменить" onclick="location.href='@Url.Action("Edit", "Skip", new { Id = mod.ID })'" />
							}
						</div>
						<div>
							@if (Model.CanDelete)
							{
								<input type="button" name="DeleteButton" class="btn btn-danger btn-xs" value="Удалить" onclick="ConfirmDelete('@Url.Action("Delete", "Skip", new { Id = mod.ID })')" />
							}
						</div>
					</td>
					}
					else
					{
					<td></td>
					}
			</tr>
        }
    </table>
}
Страница @(Model.SkipTransfers.PageCount < Model.SkipTransfers.PageNumber ? 0 : Model.SkipTransfers.PageNumber) из @Model.SkipTransfers.PageCount

@Html.PagedListPager(Model.SkipTransfers, page => Url.Action("Index", new { page }))

<script>
	function fastAddValidation(skipId, value) {
		if ((!isNaN(value)) && (value > 0) && (value < 500)) {			
				$("#validError_" + skipId).css("visibility", "hidden");
				$("#fastAdd_" + skipId).submit();		
		}
		else {
			$("#validError_" + skipId).css("visibility", "visible");
		}
	}
</script>
